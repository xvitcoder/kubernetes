# -*- mode: ruby -*-
# vi: set ft=ruby :

ENV['VAGRANT_NO_PARALLEL'] = 'yes'
WorkerNodeCount = 2

Vagrant.configure(2) do |config|

  # Kubernetes Master Server
  config.vm.define "k8s-master" do |master|
    master.vm.box = "centos/7"
    master.vm.hostname = "k8s-master.xvitcoder.com"
    master.vm.network "private_network", ip: "172.42.42.100"
    master.vm.provider "virtualbox" do |v|
      v.name = "k8s-master"
      v.memory = 2048
      v.cpus = 2
      # Prevent VirtualBox from interfering with host audio stack
      v.customize ["modifyvm", :id, "--audio", "none"]
    end
    master.vm.provision "shell", path: "bootstrap.sh"
    master.vm.provision "shell", path: "bootstrap-k8s-master.sh"
  end


  # Kubernetes Worker Nodes
  (1..WorkerNodeCount).each do |i|
    config.vm.define "k8s-worker#{i}" do |worker|
      worker.vm.box = "centos/7"
      worker.vm.hostname = "k8s-worker#{i}.xvitcoder.com"
      worker.vm.network "private_network", ip: "172.42.42.10#{i}"
      worker.vm.provider "virtualbox" do |v|
        v.name = "k8s-worker#{i}"
        v.memory = 1024
        v.cpus = 1
        # Prevent VirtualBox from interfering with host audio stack
        v.customize ["modifyvm", :id, "--audio", "none"]
      end
      worker.vm.provision "shell", path: "bootstrap-k8s-worker.sh"
    end
  end

  # NFS Server
  config.vm.define "k8s-nfs" do |nfs|
    nfs.vm.box = "centos/7"
    nfs.vm.hostname = "k8s-nfs.xvitcoder.com"
    nfs.vm.network "private_network", ip: "172.42.42.10"
    nfs.vm.provider "virtualbox" do |v|
      v.name = "k8s-nfs"
      v.memory = 1024
      v.cpus = 1
      # Prevent VirtualBox from interfering with host audio stack
      v.customize ["modifyvm", :id, "--audio", "none"]
    end
    nfs.vm.provision "shell", path: "bootstrap-k8s-nfs.sh"
  end
end
